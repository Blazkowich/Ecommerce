@inject ICategoryService CategoryService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">My Shop</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" @onclick="ToggleSubMenu">
                <span class="@GetChevronIcon()" aria-hidden="true"></span>Category
            </NavLink>
            @if (expandSubMenu)
            {
                @foreach (var category in CategoryService.Categories)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="@($"category/{category.Url}")" Match="NavLinkMatch.All">
                            <span class="oi oi-fork" aria-hidden="true"></span>@category.Name
                        </NavLink>
                    </div>
                }
            }
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool expandSubMenu = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetCategories();
        StateHasChanged();
    }

    private string GetChevronIcon()
    {
        return expandSubMenu ? "oi oi-chevron-bottom" : "oi oi-chevron-right";
    }

    private void ToggleSubMenu()
    {
        expandSubMenu = !expandSubMenu;
    }
}
